name: Build Wails App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [windows-latest]
        arch: [amd64, arm64]
        exclude:
          # Windows ARM64 needs special handling
          - os: windows-latest
            arch: arm64
          # Linux ARM64 builds might need specific runners
          - os: ubuntu-latest
            arch: arm64

    runs-on: ${{ matrix.os }}
    env:
      CGO_CFLAGS_ALLOW: "-mfma|-mf16c"

    steps:
      - uses: actions/checkout@v4

      - name: Create API Keys file (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd internal/transcribe/wait.ai
          touch keys.go
          echo "${{ secrets.WAIT_API_KEYS }}" | base64 -d > keys.go

      - name: Install Dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install base64 dos2unix -y

      - name: Create API Keys file (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Set-Location -Path "internal/transcribe/wait.ai"
          echo -n "{{ secrets.WAIT_API_KEYS }}" > keys.go.txt
          base64 -i .\keys.go.txt -o .\keys.go -d
          Remove-Item .\keys.go.txt
          cat keys.go
          # unix2dos keys.go -f

      - name: Convert line endings (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          unix2dos internal/transcribe/wait.ai/keys.go

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Install Wails and garble
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest
          go install mvdan.cc/garble@latest

      - name: Install Dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install mingw cmake nsis dos2unix -y

      - name: Install Dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgtk-3-dev libwebkit2gtk-4.1-dev libgtk-3-dev libsoup-3.0-dev libjavascriptcoregtk-4.1-dev libcairo2-dev libpango1.0-dev libharfbuzz-dev libatk1.0-dev libgdk-pixbuf2.0-dev

      - name: Install Dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install gcc
          brew install sdl2 cmake
          # brew install gsl

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: |
          wails build -platform windows/${{ matrix.arch }} -nsis -upx -obfuscated

      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          wails build -platform linux/${{ matrix.arch }} -upx -obfuscated -tags webkit2_41

      - name: Build macOS
        if: matrix.os == 'macos-latest'
        env:
          LIBRARY_PATH: "$LIBRARY_PATH:/usr/local/lib"
        run: |
          wails build -platform darwin/${{ matrix.arch }} -upx -obfuscated

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-${{ matrix.arch }}-build
          path: |
            build/bin/*
